// File: firebase_options.dart
// Generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example: Initialize Firebase in your `main.dart`:
/// ```dart
/// import 'firebase_options.dart';
/// 
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Web configuration (use same project info)
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCr1nIzcVZDDShgMB0931DGOhXU74csZV4', // You may need web-specific API key
    appId: '1:974082182255:web:your_web_app_id', // Get this from Firebase Console -> Web app
    messagingSenderId: '974082182255',
    projectId: 'ktc-logistics-ecd9f',
    authDomain: 'ktc-logistics-ecd9f.firebaseapp.com',
    storageBucket: 'ktc-logistics-ecd9f.firebasestorage.app',
    measurementId: 'G-XXXXXXXXXX', // Get this from Firebase Console -> Web app
  );

  // Android configuration from google-services.json
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCr1nIzcVZDDShgMB0931DGOhXU74csZV4',
    appId: '1:974082182255:android:7b688c7a7e14a5b0d8919a',
    messagingSenderId: '974082182255',
    projectId: 'ktc-logistics-ecd9f',
    storageBucket: 'ktc-logistics-ecd9f.firebasestorage.app',
  );

  // iOS configuration (use same project info)
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCr1nIzcVZDDShgMB0931DGOhXU74csZV4', // You may need iOS-specific API key
    appId: '1:974082182255:ios:your_ios_app_id', // Get this from Firebase Console -> iOS app  
    messagingSenderId: '974082182255',
    projectId: 'ktc-logistics-ecd9f',
    storageBucket: 'ktc-logistics-ecd9f.firebasestorage.app',
    iosBundleId: 'com.ktc.logistics_driver',
  );

  // macOS configuration (use same project info)
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyCr1nIzcVZDDShgMB0931DGOhXU74csZV4', // You may need macOS-specific API key
    appId: '1:974082182255:ios:your_macos_app_id', // Get this from Firebase Console -> macOS app
    messagingSenderId: '974082182255',
    projectId: 'ktc-logistics-ecd9f',
    storageBucket: 'ktc-logistics-ecd9f.firebasestorage.app',
    iosBundleId: 'com.ktc.logistics_driver',
  );

  // Windows configuration (use same project info)
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyCr1nIzcVZDDShgMB0931DGOhXU74csZV4', // You may need Windows-specific API key
    appId: '1:974082182255:web:your_windows_app_id', // Get this from Firebase Console -> Web app
    messagingSenderId: '974082182255',
    projectId: 'ktc-logistics-ecd9f',
    storageBucket: 'ktc-logistics-ecd9f.firebasestorage.app',
  );
}
